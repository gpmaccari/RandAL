RandAL - MANUAL
---------------

0. Build the RandAL from source code:
Usage: make [index] [align] [debug] [clean]
        index: to construct indexing part of RandAL.
        align: to construct alignment part of RandAL.
        clean: to clean everything except source code.
        debug: for develper, to build the debug version of RandAL (to debug with GNU gdb).
        
1. Indexing a reference genome:
Usage:  randal-index RefFileName.fasta [IndexFileName]
        RefFileName     : reference file name (in FASTA format).
        [IndexFileName] : index file name (in randal's binary format), the reference file name will be used if not indicated.
                        IndexFileName.ref
                        IndexFileName.rev
                        IndexFileName.bw
                        IndexFileName.fw

2. Aligning reads to the reference:
Usage:  randal-align IndexFileName ReadFileName MapFileName [OPTIONS]
        IndexFileName       : index file name (from preprocessing step with randal-build).
        ReadFileName        : read file name (in FASTQ format).
        MapFileName         : file to store alignment result (in SAM format).
        [OPTIONS]           : a list of zero or more optional arguments, default values will be used if not indicated.
                -mode number    : distance mode (2: hamming distance; 3: edit distance; default: 3).
                -th number      : threshould for distance (integer, >= 0, default: calculated based on input).
                -att number     : number of attempts for the randomization (integer, > 0, default: calculated based on input).
                -minws number   : minimal length of common substring between read and reference (integer, > 0, < read length, default: calculated based on input).
                -maxcdt number  : maximal number of candidates for alignment (integer, > 0, default: 2).

3. Default parameters (calculated with python code):
th = int(math.floor(error_rate * length + th_para * math.sqrt(length * error_rate * (1 - error_rate))))
th_para = 4
att = att_para * (th + 1)
att_para = 1
minws = int(math.ceil(length/(th + 1))) + 3